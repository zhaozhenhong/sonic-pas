

/*
 * Copyright (c) 2016 Dell Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
 *  LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS
 * FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
 *
 * See the Apache Version 2.0 License for specific language governing
 * permissions and limitations under the License.
 */

#ifndef DELL_BASE_PLATFORM_COMMON_H
#define DELL_BASE_PLATFORM_COMMON_H

#include "cps_api_operation.h"
#include "dell-yang-types.h"
#include "dell-base-common.h"
#include "dell-base-interface-common.h"
#include <stdint.h>
#include <stdbool.h>


#define cps_api_obj_CAT_PLATFORM (30) 

#define DELL_BASE_PLATFORM_COMMON_MODEL_STR "dell-base-platform-common"

typedef uint32_t PLATFORM_FAULT_VALUE_t;
/*
Comments:Power consumption, in mW
*/
typedef uint32_t PLATFORM_POWER_USAGE_TYPE_t;
/*
Comments:Encoded value for type of card
*/
typedef uint32_t PLATFORM_CARD_TYPE_TYPE_t;
/*
Comments:Temperature, in degrees C
*/
typedef int16_t PLATFORM_TEMPERATURE_TYPE_t;
/*
Comments:Fan speed, in RPM
*/
typedef uint16_t PLATFORM_FAN_SPEED_TYPE_t;

/* Enumeration platform:power-measurement-type */

typedef enum { 
  PLATFORM_POWER_MEASUREMENT_TYPE_OMA = 1, /*Optical Modulation Amplitude*/
  PLATFORM_POWER_MEASUREMENT_TYPE_AVERAGE = 2, /*Average Power*/
  PLATFORM_POWER_MEASUREMENT_TYPE_MIN=1,
  PLATFORM_POWER_MEASUREMENT_TYPE_MAX=2,
} PLATFORM_POWER_MEASUREMENT_TYPE_t;
/* Enumeration platform:fault-type */

typedef enum { 
  PLATFORM_FAULT_TYPE_OK = 1, /*No fault*/
  PLATFORM_FAULT_TYPE_UNKNOWN = 2, /*Unknown error*/
  PLATFORM_FAULT_TYPE_ECOMM = 3, /*Communication error*/
  PLATFORM_FAULT_TYPE_ECFG = 4, /*Configuration error*/
  PLATFORM_FAULT_TYPE_ECOMPAT = 5, /*Compatibility error*/
  PLATFORM_FAULT_TYPE_EHW = 6, /*Hardware error*/
  PLATFORM_FAULT_TYPE_EPOWER = 7, /*Power error*/
  PLATFORM_FAULT_TYPE_MIN=1,
  PLATFORM_FAULT_TYPE_MAX=7,
} PLATFORM_FAULT_TYPE_t;
/* Enumeration platform:reboot-type */

typedef enum { 
  PLATFORM_REBOOT_TYPE_WARM = 1, /*Warm reboot*/
  PLATFORM_REBOOT_TYPE_COLD = 2, /*Cold reboot*/
  PLATFORM_REBOOT_TYPE_MIN=1,
  PLATFORM_REBOOT_TYPE_MAX=2,
} PLATFORM_REBOOT_TYPE_t;
/* Enumeration platform:input-power-type */

typedef enum { 
  PLATFORM_INPUT_POWER_TYPE_UNKNOWN = 1, /*Unknown*/
  PLATFORM_INPUT_POWER_TYPE_AC = 2, /*Alternating current*/
  PLATFORM_INPUT_POWER_TYPE_DC = 3, /*Direct current*/
  PLATFORM_INPUT_POWER_TYPE_MIN=1,
  PLATFORM_INPUT_POWER_TYPE_MAX=3,
} PLATFORM_INPUT_POWER_TYPE_t;
/* Enumeration platform:media-type */

typedef enum { 
  PLATFORM_MEDIA_TYPE_AR_POPTICS_NOTPRESENT = 1, /*Pluggable optics not present*/
  PLATFORM_MEDIA_TYPE_AR_POPTICS_UNKNOWN = 2, /*Pluggable optics unknown*/
  PLATFORM_MEDIA_TYPE_AR_POPTICS_NOTSUPPORTED = 3, /*Pluggable optics not supported*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_USR = 4, /*Pluggable optics SFPPLUS_10GBASE_USR*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_SR = 5, /*Pluggable optics SFPPLUS_10GBASE_SR*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_LR = 6, /*Pluggable optics SFPPLUS_10GBASE_LR*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_ER = 7, /*Pluggable optics SFPPLUS_10GBASE_ER*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_ZR = 8, /*Pluggable optics SFPPLUS_10GBASE_ZR*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_CX4 = 9, /*Pluggable optics SFPPLUS_10GBASE_CX4*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_LRM = 10, /*Pluggable optics SFPPLUS_10GBASE_LRM*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_T = 11, /*Pluggable optics AR_SFPPLUS_10GBASE_T*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_CUHALFM = 12, /*Pluggable optics SFPPLUS_10GBASE_CUHALFM*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_CU1M = 13, /*Pluggable optics SFPPLUS_10GBASE_CU1M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_CU2M = 14, /*Pluggable optics SFPPLUS_10GBASE_CU2M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_CU3M = 15, /*Pluggable optics SFPPLUS_10GBASE_CU3M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_CU5M = 16, /*Pluggable optics SFPPLUS_10GBASE_CU5M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_CU7M = 17, /*Pluggable optics SFPPLUS_10GBASE_CU7M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_CU10M = 18, /*Pluggable optics SFPPLUS_10GBASE_CU10M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_ACU7M = 19, /*Pluggable optics SFPPLUS_10GBASE_ACU7M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_ACU10M = 20, /*Pluggable optics SFPPLUS_10GBASE_ACU10M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_ACU15M = 21, /*Pluggable optics SFPPLUS_10GBASE_ACU15M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_DWDM = 22, /*Pluggable optics SFPPLUS_10GBASE_DWDM*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_DWDM_40KM = 23, /*Pluggable optics SFPPLUS_10GBASE_DWDM_40KM*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_10GBASE_DWDM_80KM = 24, /*Pluggable optics SFPPLUS_10GBASE_DWDM_80KM*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_SR4 = 25, /*Pluggable optics QSFP_40GBASE_SR4*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_SR4_EXT = 26, /*Pluggable optics QSFP_40GBASE_SR4_EXT*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_LR4 = 27, /*Pluggable optics QSFP_40GBASE_LR4*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_LM4 = 28, /*Pluggable optics QSFP_40GBASE_LM4*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_PSM4_LR = 29, /*Pluggable optics QSFP_40GBASE_PSM4_LR*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_PSM4_1490NM = 30, /*Pluggable optics QSFP_40GBASE_PSM4_1490NM*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_PSM4_1490NM_1M = 31, /*Pluggable optics QSFP_40GBASE_PSM4_1490NM_1M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_PSM4_1490NM_3M = 32, /*Pluggable optics QSFP_40GBASE_PSM4_1490NM_3M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_PSM4_1490NM_5M = 33, /*Pluggable optics QSFP_40GBASE_PSM4_1490NM_5M*/
  PLATFORM_MEDIA_TYPE_AR_4X1_1000BASE_T = 34, /*Pluggable optics 4x1_1000BASE_T*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_CR4_HAL_M = 35, /*Pluggable optics QSFP_40GBASE_CR4_HAL_M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_CR4_1M = 36, /*Pluggable optics QSFP_40GBASE_CR4_1M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_CR4_2M = 37, /*Pluggable optics QSFP_40GBASE_CR4_2M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_CR4_3M = 38, /*Pluggable optics QSFP_40GBASE_CR4_3M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_CR4_5M = 39, /*Pluggable optics QSFP_40GBASE_CR4_5M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_CR4_7M = 40, /*Pluggable optics QSFP_40GBASE_CR4_7M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_CR4_10M = 41, /*Pluggable optics QSFP_40GBASE_CR4_10M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_CR4_50M = 42, /*Pluggable optics QSFP_40GBASE_CR4_50M*/
  PLATFORM_MEDIA_TYPE_AR_QSFP_40GBASE_CR4 = 43, /*Pluggable optics QSFP_40GBASE_CR4*/
  PLATFORM_MEDIA_TYPE_AR_4X10_10GBASE_CR1_HAL_M = 44, /*Pluggable optics 4x10_10GBASE_CR1_HAL_M*/
  PLATFORM_MEDIA_TYPE_AR_4X10_10GBASE_CR1_1M = 45, /*Pluggable optics 4x10_10GBASE_CR1_1M*/
  PLATFORM_MEDIA_TYPE_AR_4X10_10GBASE_CR1_3M = 46, /*Pluggable optics 4x10_10GBASE_CR1_3M*/
  PLATFORM_MEDIA_TYPE_AR_4X10_10GBASE_CR1_5M = 47, /*Pluggable optics 4x10_10GBASE_CR1_5M*/
  PLATFORM_MEDIA_TYPE_AR_4X10_10GBASE_CR1_7M = 48, /*Pluggable optics 4x10_10GBASE_CR1_7M*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_FC_8GBASE_SR = 49, /*Pluggable optics SFPPLUS_FC_8GBASE_SR*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_FC_8GBASE_IR = 50, /*Pluggable optics SFPPLUS_FC_8GBASE_IR*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_FC_8GBASE_MR = 51, /*Pluggable optics SFPPLUS_FC_8GBASE_MR*/
  PLATFORM_MEDIA_TYPE_AR_SFPPLUS_FC_8GBASE_LR = 52, /*Pluggable optics SFPPLUS_FC_8GBASE_LR*/
  PLATFORM_MEDIA_TYPE_SFP_SX = 53, /*Pluggable optics SFP_SX*/
  PLATFORM_MEDIA_TYPE_SFP_LX = 54, /*Pluggable optics SFP_LX*/
  PLATFORM_MEDIA_TYPE_SFP_ZX = 55, /*Pluggable optics SFP_ZX*/
  PLATFORM_MEDIA_TYPE_SFP_CX = 56, /*Pluggable optics SFP_CX*/
  PLATFORM_MEDIA_TYPE_SFP_DX = 57, /*Pluggable optics SFP_DX*/
  PLATFORM_MEDIA_TYPE_SFP_T = 58, /*Pluggable optics SFP_T*/
  PLATFORM_MEDIA_TYPE_SFP_FX = 59, /*Pluggable optics SFP_FX*/
  PLATFORM_MEDIA_TYPE_SFP_CWDM = 60, /*Pluggable optics SFP_CWDM*/
  PLATFORM_MEDIA_TYPE_SFP_IR1 = 61, /*Pluggable optics SFP_IR1*/
  PLATFORM_MEDIA_TYPE_SFP_LR1 = 62, /*Pluggable optics SFP_LR1*/
  PLATFORM_MEDIA_TYPE_SFP_LR2 = 63, /*Pluggable optics SFP_LR2*/
  PLATFORM_MEDIA_TYPE_SFP_BX10 = 64, /*Pluggable optics SFP_BX10*/
  PLATFORM_MEDIA_TYPE_SFP_PX = 65, /*Pluggable optics SFP_PX*/
  PLATFORM_MEDIA_TYPE_4X_10GBASE_SR_AOCXXM = 66, /*Pluggable optics 4x10GBASE-SR-AOCXXM*/
  PLATFORM_MEDIA_TYPE_QSFP_40GBASE_SM4 = 67, /*Pluggable optics QSFP_40GBASE_SM4*/
  PLATFORM_MEDIA_TYPE_MIN=1,
  PLATFORM_MEDIA_TYPE_MAX=67,
} PLATFORM_MEDIA_TYPE_t;
/* Enumeration platform:fault-severity */

typedef enum { 
  PLATFORM_FAULT_SEVERITY_CLEARED = 1, 
  PLATFORM_FAULT_SEVERITY_INDETERMINATE = 2, 
  PLATFORM_FAULT_SEVERITY_CRITICAL = 3, 
  PLATFORM_FAULT_SEVERITY_MAJOR = 4, 
  PLATFORM_FAULT_SEVERITY_MINOR = 5, 
  PLATFORM_FAULT_SEVERITY_WARNING = 6, 
  PLATFORM_FAULT_SEVERITY_MIN=1,
  PLATFORM_FAULT_SEVERITY_MAX=6,
} PLATFORM_FAULT_SEVERITY_t;
/* Enumeration platform:fan-airflow-type */

typedef enum { 
  PLATFORM_FAN_AIRFLOW_TYPE_UNKNOWN = 1, /*Unknown*/
  PLATFORM_FAN_AIRFLOW_TYPE_NORMAL = 2, /*Normal airflow*/
  PLATFORM_FAN_AIRFLOW_TYPE_REVERSE = 3, /*Reverse airflow*/
  PLATFORM_FAN_AIRFLOW_TYPE_MIN=1,
  PLATFORM_FAN_AIRFLOW_TYPE_MAX=3,
} PLATFORM_FAN_AIRFLOW_TYPE_t;
/* Enumeration platform:media-category */

typedef enum { 
  PLATFORM_MEDIA_CATEGORY_SFP = 1, /*SFP media category*/
  PLATFORM_MEDIA_CATEGORY_SFP_PLUS = 2, /*SFP+ media category*/
  PLATFORM_MEDIA_CATEGORY_QSFP = 3, /*QSFP media category*/
  PLATFORM_MEDIA_CATEGORY_QSFP_PLUS = 4, /*QSFP+ media category*/
  PLATFORM_MEDIA_CATEGORY_QSFP28 = 5, /*QSFP28 media category*/
  PLATFORM_MEDIA_CATEGORY_MIN=1,
  PLATFORM_MEDIA_CATEGORY_MAX=5,
} PLATFORM_MEDIA_CATEGORY_t;
/* Enumeration platform:entity-type */

typedef enum { 
  PLATFORM_ENTITY_TYPE_PSU = 1, /*PSU (power supply unit)*/
  PLATFORM_ENTITY_TYPE_FAN_TRAY = 2, /*Fan tray*/
  PLATFORM_ENTITY_TYPE_CARD = 3, /*Card (Linecard, RPM)*/
  PLATFORM_ENTITY_TYPE_MIN=1,
  PLATFORM_ENTITY_TYPE_MAX=3,
} PLATFORM_ENTITY_TYPE_t;
/* Enumeration platform:media-status */

typedef enum { 
  PLATFORM_MEDIA_STATUS_NORMAL_STATUS = 1, /*Normal state, not crossed any threshold values*/
  PLATFORM_MEDIA_STATUS_HIGH_ALARM = 2, /*High alarm state*/
  PLATFORM_MEDIA_STATUS_LOW_ALARM = 3, /*Low alarm state*/
  PLATFORM_MEDIA_STATUS_HIGH_WARNING = 4, /*High warning state*/
  PLATFORM_MEDIA_STATUS_LOW_WARNING = 5, /*Low warning state*/
  PLATFORM_MEDIA_STATUS_MIN=1,
  PLATFORM_MEDIA_STATUS_MAX=5,
} PLATFORM_MEDIA_STATUS_t;

/* No objects defined.. */

#endif
